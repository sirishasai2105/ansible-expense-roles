- name: Disabling node js
  ansible.builtin.command: dnf module disable nodejs -y

- name: enabling nodejs 20 version
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package:
    name: nodejs
    state: installed

- name: install mysql
  ansible.builtin.package:
    name: mysql
    state: installed

- name: adding the expense user
  ansible.builtin.user:
    name: expense
    state: present

- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory   

- name: download the backend code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip



- name: extracting the downloaded file
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: installing the dependancies
  ansible.builtin.command: npm install
  args:
    chdir: /app


- name: copy backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: ansible to install pymysql
  ansible.builtin.pip:
    name:
      - PyMySQL
      - cryptography
    executable: pip3.9

- name: connecting to mysql
  community.mysql.mysql_db:
    login_host: "{{ login_host }}"
    login_password: "{{ login_password }}"
    login_user: root
    target: /app/schema/backend.sql
    state: import
    name: all

- name: daemon reload 
  ansible.builtin.systemd_service:
    daemon_reload: true
    state: restarted
    name: backend